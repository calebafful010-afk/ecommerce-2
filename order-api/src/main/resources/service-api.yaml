---
openapi: 3.0.3
info:
  title: eCommerce Order Api
  version: "1.0"
paths:
  /orders/{userId}/history:
    get:
      tags:
        - "Order"
      summary: Return a summary including all user's historical orders
      parameters:
        - in: path
          name: userId
          description: User Id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
        "500":
          description: Internal server error
  /orders/{orderId}:
    get:
      tags:
        - "Order"
      summary: Return an order details. Not yet implemented
      parameters:
        - in: path
          name: orderId
          description: Order Id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsDto'
        "404":
          description: Not found
        "500":
          description: Internal server error
        "501":
          description: Not implemented
    patch:
      tags:
        - "Order"
      summary: Update an order
      parameters:
        - in: path
          name: orderId
          description: Order Id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        description: Partial update content
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateDto'
      responses:
        "200":
          description: Success
        "400":
          description: Bad request
        "404":
          description: Not found
        "500":
          description: Internal server error
components:
  schemas:
    OrderDto:
      type: object
      properties:
        orderId:
          type: string
          description: Order unique id
          format: uuid
        userId:
          type: string
          description: User unique id
          format: uuid
        amount:
          type: number
          format: double
          description: Order amount
          example: 100
        currency:
          type: string
          description: Order currency
          enum: [EUR]
          example: EUR
        status:
          type: string
          description: Order status
          enum: [NEW, PAYMENT_APPROVED, PAYMENT_FAILED, SHIPPING_IN_PROGRESS, SHIPPING_COMPLETED, SHIPPING_FAILED, COMPLETED, CANCELLED]
          example: NEW
    OrderUpdateDto:
      type: object
      properties:
        status:
          type: string
          description: Order status
          enum: [NEW, PAYMENT_APPROVED, PAYMENT_FAILED, SHIPPING_IN_PROGRESS, SHIPPING_COMPLETED, SHIPPING_FAILED, COMPLETED, CANCELLED]
          example: NEW
    OrderDetailsDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderDto'
      properties:
        details:
          type: object
          description: Order details (including the list of products)